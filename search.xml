<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>wangEditor3上传图片</title>
      <link href="/2018/03/21/wangEditor3/"/>
      <url>/2018/03/21/wangEditor3/</url>
      <content type="html"><![CDATA[<p><strong> 我用的是myeclipse 2017,spring boot+thymeleaf项目,wangEditor3与wangeditor2的配置方式不同，切记看文档，最下方是官方文档。 </strong></p><h3 id="一-下载，创建编辑器以及配置"><a href="#一-下载，创建编辑器以及配置" class="headerlink" title="一.下载，创建编辑器以及配置"></a>一.下载，创建编辑器以及配置</h3><h4 id="1-1-下载wangEditor3的GitHub网址："><a href="#1-1-下载wangEditor3的GitHub网址：" class="headerlink" title="1.1 下载wangEditor3的GitHub网址："></a>1.1 下载wangEditor3的GitHub网址：</h4><p><a href="https://github.com/wangfupeng1988/wangEditor/releases" target="_blank" rel="noopener">https://github.com/wangfupeng1988/wangEditor/releases</a></p><h4 id="1-2-选取下载的文件夹中release，导入项目中。"><a href="#1-2-选取下载的文件夹中release，导入项目中。" class="headerlink" title="1.2 选取下载的文件夹中release，导入项目中。"></a>1.2 选取下载的文件夹中release，导入项目中。</h4><h4 id="1-3-让编辑器支持全屏功能的准备：下载全屏插件的GitHub网址："><a href="#1-3-让编辑器支持全屏功能的准备：下载全屏插件的GitHub网址：" class="headerlink" title="1.3 让编辑器支持全屏功能的准备：下载全屏插件的GitHub网址："></a>1.3 让编辑器支持全屏功能的准备：下载全屏插件的GitHub网址：</h4><p><a href="https://github.com/chris-peng/wangEditor-fullscreen-plugin" target="_blank" rel="noopener">https://github.com/chris-peng/wangEditor-fullscreen-plugin</a><br><strong> 把wangEditor-fullscreen-plugin.css和wangEditor-fullscreen-plugin.js两个文件下载下来，再下载jquery-3.2.1.min.js，都放入release文件夹（想放哪里放哪里，引入时路径保证正确就可以）。 </strong></p><h4 id="1-4-创建编辑器："><a href="#1-4-创建编辑器：" class="headerlink" title="1.4 创建编辑器："></a>1.4 创建编辑器：</h4><p><strong> 进入release文件夹下找到wangEditor.js或者wangEditor.min.js，引入任意一个。例子： </strong><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">xmlns</span>=<span class="string">"http://www.w3.org/1999/xhtml"</span> <span class="attr">xmlns:th</span>=<span class="string">"http://www.thymeleaf.org"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 设置全屏功能的css文件 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">type</span>=<span class="string">"text/css"</span> <span class="attr">th:href</span>=<span class="string">"@&#123;/release/wangEditor-fullscreen-plugin.css&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">link</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 编辑器编辑后，提交时执行js，获得编辑器的内容，赋值给textarea，用于向后台提交存入数据库 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">function modifyContent() &#123;</span></span><br><span class="line"><span class="undefined">var introduce = document.getElementById("introduce");</span></span><br><span class="line"><span class="undefined">introduce.value = editor.txt.html();</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">th:action</span>=<span class="string">"@&#123;/admin/addUser&#125;"</span> <span class="attr">method</span>=<span class="string">"post"</span> <span class="attr">onsubmit</span>=<span class="string">"modifyContent()"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 编辑器编辑，提交时执行js，获得编辑器的内容，赋值给textarea，用于向后台提交存入数据库 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">textarea</span> <span class="attr">rows</span>=<span class="string">"5"</span> <span class="attr">cols</span>=<span class="string">"35"</span> <span class="attr">name</span>=<span class="string">"usIntroduce"</span> <span class="attr">style</span>=<span class="string">"display:none;"</span> <span class="attr">id</span>=<span class="string">"introduce"</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"editor"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>欢迎使用 <span class="tag">&lt;<span class="name">b</span>&gt;</span>wangEditor<span class="tag">&lt;/<span class="name">b</span>&gt;</span> 富文本编辑器<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 注意， 只需要引用 JS，无需引用任何 CSS ！！！--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">th:src</span>=<span class="string">"@&#123;/release/wangEditor.min.js&#125;"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 设置全屏功能的两个js文件，先引入jquery-3.2.1.min.js，在引入wangEditor-fullscreen-plugin.js --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">th:src</span>=<span class="string">"@&#123;/release/jquery-3.2.1.min.js&#125;"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">th:src</span>=<span class="string">"@&#123;/release/wangEditor-fullscreen-plugin.js&#125;"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">            var E = window.wangEditor</span></span><br><span class="line"><span class="undefined">            var editor = new E('#editor')</span></span><br><span class="line"><span class="undefined">            /* 处理上传图片的controller路径 */</span></span><br><span class="line"><span class="undefined">             editor.customConfig.uploadImgServer = '/admin/uploadImg'</span></span><br><span class="line"><span class="undefined">             /* 定义上传图片的默认名字 */</span></span><br><span class="line"><span class="undefined">             editor.customConfig.uploadFileName = 'myFileName'</span></span><br><span class="line"><span class="undefined">            // 或者 var editor = new E( document.getElementById('editor') )</span></span><br><span class="line"><span class="undefined">            editor.create()</span></span><br><span class="line"><span class="undefined">            //初始化全屏插件</span></span><br><span class="line"><span class="undefined">            E.fullscreen.init('#editor');</span></span><br><span class="line"><span class="undefined">        </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span>&gt;</span><span class="tag">&lt;/<span class="name">input</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h4 id="1-5-如果你用的thymeleaf，则执行修改功能时，可使用th-utext给富文本编辑器赋值-你添加到数据库中的编辑器内容"><a href="#1-5-如果你用的thymeleaf，则执行修改功能时，可使用th-utext给富文本编辑器赋值-你添加到数据库中的编辑器内容" class="headerlink" title="1.5 如果你用的thymeleaf，则执行修改功能时，可使用th:utext给富文本编辑器赋值(你添加到数据库中的编辑器内容)"></a>1.5 如果你用的thymeleaf，则执行修改功能时，可使用th:utext给富文本编辑器赋值(你添加到数据库中的编辑器内容)</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"editor"</span> <span class="attr">th:utext</span>=<span class="string">"$&#123;users.usIntroduce&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong> 若是使用的其他，如jsp，则可以使用编辑器的设置内容功能：editor.txt.html(‘${users.usIntroduce}’) </strong></p><h3 id="二-Java-上传图片并回显"><a href="#二-Java-上传图片并回显" class="headerlink" title="二.Java 上传图片并回显"></a>二.Java 上传图片并回显</h3><h4 id="2-1-返回结果的数据格式"><a href="#2-1-返回结果的数据格式" class="headerlink" title="2.1 返回结果的数据格式"></a>2.1 返回结果的数据格式</h4><p><strong> 这是官方文档给我们的数据格式，是json格式，实际使用忽略注释(//以及//后的内容) </strong></p><p><strong> <font color="#FF0033">{<br>    // errno 即错误代码，0 表示没有错误。<br>    //       如果有错误，errno != 0，可通过下文中的监听函数 fail 拿到该错误码进行自定义处理<br>    “errno”: 0,<br>    // data 是一个数组，返回若干图片的线上地址<br>    “data”: [<br>        “图片1地址”,<br>        “图片2地址”,<br>        “……”<br>    ]<br>}</font> </strong></p><h4 id="2-2-根据返回结果制定返回数据类-Result-java-省略无参和有参构造方法以及getter-setter方法"><a href="#2-2-根据返回结果制定返回数据类-Result-java-省略无参和有参构造方法以及getter-setter方法" class="headerlink" title="2.2 根据返回结果制定返回数据类 Result.java(省略无参和有参构造方法以及getter,setter方法)"></a>2.2 根据返回结果制定返回数据类 Result.java(省略无参和有参构造方法以及getter,setter方法)</h4><p><strong> import java.io.Serializable;<br>public class Result<t> implements Serializable {<br>    /<em> 错误码. </em>/<br>    private Integer errno;<br>    /<em> 具体的内容. </em>/<br>    private String [] data;<br>} </t></strong></p><h4 id="2-3-处理返回结果类-ResultUtil-java-只有成功获得数据的处理方法，如需要其他方法自行添加"><a href="#2-3-处理返回结果类-ResultUtil-java-只有成功获得数据的处理方法，如需要其他方法自行添加" class="headerlink" title="2.3 处理返回结果类 ResultUtil.java(只有成功获得数据的处理方法，如需要其他方法自行添加)"></a>2.3 处理返回结果类 ResultUtil.java(只有成功获得数据的处理方法，如需要其他方法自行添加)</h4><p><strong> import java.util.List;<br>public class ResultUtil {<br>    public static Result success(String []object) {<br>        Result result = new Result();<br>        result.setErrno(0);<br>        result.setData(object);<br>        return result;<br>    }<br>    public static Result success() {<br>        return success(null);<br>    }<br>} </strong></p><h4 id="2-4-WangEditorController-java-为了方便，省去了service层，serviceImpl层，dao层"><a href="#2-4-WangEditorController-java-为了方便，省去了service层，serviceImpl层，dao层" class="headerlink" title="2.4 WangEditorController.java (为了方便，省去了service层，serviceImpl层，dao层)"></a>2.4 WangEditorController.java (为了方便，省去了service层，serviceImpl层，dao层)</h4><p><strong> import java.io.File;<br>import java.io.IOException;<br>import java.util.UUID;<br>import javax.servlet.http.HttpServletRequest;<br>import javax.servlet.http.HttpSession;<br>import org.springframework.web.bind.annotation.RequestMapping;<br>import org.springframework.web.bind.annotation.RestController;<br>import org.springframework.web.multipart.MultipartFile;<br>import org.springframework.web.servlet.ModelAndView; </strong></p><p><strong> @RequestMapping(“admin”)<br>@RestController<br>public class WangEditorController {<br>    //转到wangEditor3的界面<br>    @RequestMapping(value = “/wangEditor3”)<br>    public ModelAndView wangEditor(){<br>        return new ModelAndView(“index”);//index.html<br>    }<br>    //上传图片并返回图片路径(json格式)，接收的图片名和wangEditor定义的图片名保持一致<br>    @RequestMapping(“uploadImg”)<br>    public Result uploadImg(MultipartFile myFileName,HttpSession session,HttpServletRequest request) throws IllegalStateException, IOException{<br>        String realName = “”;<br>        if (myFileName != null) {<br>            String fileName = myFileName.getOriginalFilename();<br>            String fileNameExtension = fileName.substring(fileName.indexOf(“.”), fileName.length() - 1);<br>            // 生成实际存储的真实文件名<br>            realName = UUID.randomUUID().toString() + fileNameExtension;<br>// “/upload”是你自己定义的上传目录<br>String realPath = session.getServletContext().getRealPath(“/upload”);<br>    File uploadFile = new File(realPath, realName);<br>    myFileName.transferTo(uploadFile);<br>    }<br>    String [] str = {request.getContextPath() + “/upload/“ + realName};<br>        return ResultUtil.success(str);<br>        }<br>} </strong></p><h4 id="2-5-Java对象转json串"><a href="#2-5-Java对象转json串" class="headerlink" title="2.5 Java对象转json串"></a>2.5 Java对象转json串</h4><p><strong> 我的项目是spring boot项目，由@RestController注解相当于@ResponseBody ＋ @Controller合在一起的作用，@ResponseBody将Java对象转为json串，但是有些初学者用的还是普通Java项目等没有这些自动转换的功能，所以这里是解决方法<br>(1)maven项目在pom.xml中添加 </strong><br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>net.sf.json-lib<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>json-lib<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p><strong> (2)普通Java项目自行下载 json-lib-2.4.jar 导入项目并Build Path </strong></p><p><strong> (3)使用方法，如上文<br>Result result = ResultUtil.success(str);<br>JSONObject object =JSONObject.fromObject(result );<br>response.getWriter().write(object.toString());需要用到HttpServletResponse response </strong></p><h4 id="2-6-wangEditor3官方文档网址：https-www-kancloud-cn-wangfupeng-wangeditor3"><a href="#2-6-wangEditor3官方文档网址：https-www-kancloud-cn-wangfupeng-wangeditor3" class="headerlink" title="2.6 wangEditor3官方文档网址：https://www.kancloud.cn/wangfupeng/wangeditor3"></a>2.6 wangEditor3官方文档网址：<a href="https://www.kancloud.cn/wangfupeng/wangeditor3" target="_blank" rel="noopener">https://www.kancloud.cn/wangfupeng/wangeditor3</a></h4><h4 id="2-7-wangEditor的demo例子：wangeditor3"><a href="#2-7-wangEditor的demo例子：wangeditor3" class="headerlink" title="2.7 wangEditor的demo例子：wangeditor3"></a>2.7 wangEditor的demo例子：<a href="http://www.wangeditor.com/" title="wangeditor3" target="_blank" rel="noopener">wangeditor3</a></h4><p><strong><font color="#FF0033">因为编辑器的缘故Java代码没有层次，所以复制到你用的IDE中,用IDE的代码规范功能规范一下</font><br>若是哪里有理解错误的或写错的地方，望各位读者评论或者私信指正，不胜感激。 </strong></p>]]></content>
      
      <categories>
          
          <category> wangEditor </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>Hello World</title>
      <link href="/2018/03/21/hello-world/"/>
      <url>/2018/03/21/hello-world/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
    </entry>
    
  
  
    
    <entry>
      <title>about me</title>
      <link href="/about/index.html"/>
      <url>/about/index.html</url>
      <content type="html"><![CDATA[<h2 id="about-me"><a href="#about-me" class="headerlink" title="about me"></a>about me</h2><p><strong>my name is maliming,English is called Jack<br>我比较喜欢宅在一个自己感到温暖的地方,喜欢面食,辣椒<br>喜欢看小说(名著,网文都可以),喜欢听音乐,最喜欢音乐是——Break Me Up: <a href="http://music.163.com/#/song?id=30590268" title="Break Me Up" target="_blank" rel="noopener">Break Me Up</a>。<br>喜欢轻松,自在的感觉,也喜欢跑步,喜欢动漫-龙珠,梦想就是能在夜晚下雨中的小湖上画船听雨眠٩(๑❛ᴗ❛๑)۶</strong></p><h2 id="contact-me-联系我"><a href="#contact-me-联系我" class="headerlink" title="contact me(联系我)"></a>contact me(联系我)</h2><p><strong>email：<a href="mailto:wqmlm1365413148@outlook.com" title="email" target="_blank" rel="noopener">邮箱</a></strong><br><strong>GitHub： <a href="https://github.com/malimingwq/" title="GitHub" target="_blank" rel="noopener">GitHub</a></strong><br><strong>网易云：<a href="http://music.163.com/#/user/home?id=384456184" title="music" target="_blank" rel="noopener">网易云</a></strong><br><strong>QQ：1365413148</strong></p>]]></content>
    </entry>
    
    <entry>
      <title>分类</title>
      <link href="/categories/index.html"/>
      <url>/categories/index.html</url>
      <content type="html"><![CDATA[]]></content>
    </entry>
    
  
</search>
